#!/bin/bash
#####################################################################
# Script Name  : hb-archive (Version 1.0.2)
# Description  : archive HomeBank 5.2.3 backup files from the previous month
# Dependencies : case, cat, clear, date, find, mktemp, mv, touch, zip
# Arguments    : none
# Author       : Richard Romig, 30 March 2019
# Email        : rick.romig@gmail.com
# Comment      : Run on the last date of the month!
# Script will not run prior to the 21st day of the month.
#####################################################################
# Copyright (C) 2019, Richard B. Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

# Fnction to display help page
hba-help () {

cat << _EOF_

HomeBank Archive, version 1.0.4

hb-archive is a script to create a monthly archive of backup files created by
HomeBank. I've used this script with HomeBank version 5.2.3 but it should work
with any version of HomeBank that creates a daily backup with the .bak extension
on any Linux system based on Debian or Ubuntu.

The script is intended to be run on the last day of the month to archive the
previous month's backup files. For instance, running the script on March 31
archives February's backup files. However, the script can be forced to run as
early as the 21st of the month.

Backup (*.bak) files in the ~/Documents/HomeBank directory dated earlier than
12:01 AM on the first day of the current calendar month are moved to a temporary
directory and then they are moved into a compressed archive file for that month
in an archive folder. If there are no backup files in the backup folder, no
archive file is created and the script exits. Upon exiting the script for any
reason, the reference file and the temporary directory are deleted.

The archive subdirectory is created under ~/Documents/HomeBank if it doesn't
already exist.

The only command line arguments allowed are '--help' or '-h' to display this
help page. Any other arguments are reported as errors.

Please review the README.md, LICENSE, and WARRANTY in the downloaded ZIP archive
for more information. They can also be reviewed in my repository at:
https://github.com/RickRomig/homebankarchive

By Richard Romig (GNU/General Public License version 2.0)

_EOF_

}

# Cleanup after exit
cleanup () {
  [ -f "$ref_file" ] && rm -f "$ref_file"
  [ -d "$backup_dir" ] && rm -rf "$backup_dir"
}

trap cleanup EXIT

# Variables

user=$USER
title="HomeBank Archive 1.0.4 -- Copyright (c) 2019, Richard Romig (GPL v2.0)"

# Store the directory where script was launched
curdir=$PWD

# Homebank Directory
hbdir="/home/$user/Documents/Homebank"

# Set initial value of runflag to 0 (not okay to run archive)
runflag=0

# Get the current month and day
month=$(date +"%b")
today=$(date +"%d")

# Get previous month
prevmonth=$(date --date="-1 month" +"%B %Y")

# Create filename for previous month archive file
hbarchive=$(date --date="-1 month" +"%Y-%m")
hbarchive+="-backup.zip"

# Set reference date to 12:01 AM on 1st day of the current month
rd=$(date +"%Y%m")
rd+="010001"

# Create the reference file. Exit on error.
if ! ref_file=$(mktemp)
then
  echo "Error: Failed to create reference file." >&2
  exit 1
fi

# Change timestamp of reference file to 12:01 AM on 1st day of the month
if ! touch -t "$rd" "$ref_file"
then
  echo "Error: Could not change the timestamp of the reference file." >&2
  exit 1
fi

# Create temporary backup directory. Exit on error.
if ! backup_dir=$(mktemp -d)
then
  echo "Error: Failed to create temporary directory." >&2
  exit 1
fi

# Show help
clear
if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
  hba-help
  exit
fi

# Check for invalid argument
if [ -n "$1" ]; then
  echo "Error: Invalid argument. Try 'hb-archive --help' for more info." >&2
  exit 1
fi

# Check to see if it's the last day of the month
case $month in
  Feb)  [ "$today" -ge "28" ] && runflag=1 ;;
  Apr|Jun|Sep|Nov)  [ "$today" -eq "30" ] && runflag=1 ;;
  *)  [ "$today" -eq "31" ] && runflag=1 ;;
esac

# If not the last day of the month, check if it's too early to archive
if (( runflag == 0 )) && (( today < 21 )); then
  echo "$title"
  echo "$month $today is too early in the month to archive $prevmonth backup files."
  echo "Archive operation canceled."
  exit
elif (( runflag == 0 )) && (( today >= 21 )); then
  echo "$title"
  echo "$month $today is not the end of the month."
  read -rp "Do you still wish to archive backup files for $prevmonth? [yN]" yn
  case $yn in
    [Yy]*)
      sleep 5
      runflag=1
      clear
      ;;
    *)
      echo $'\n'$"Archive operation canceled."
      exit
      ;;
  esac
fi

# Execution

# Go to the HomeBank directory from wherever you are if you're not already there
[ "$curdir" != "$hbdir" ] && pushd "$hbdir" > /dev/null

# Create the archive folder if it doesn't already exist
[ -d "$hbdir/archive" ] || mkdir -p "$hbdir/archive"

echo "$title"
echo "Archiving HomeBank backup files from $prevmonth ..."

# Move backup files from the previous month to the backup folder
find ./ -maxdepth 1 -type f -iname "*.bak" -not -newer "$ref_file" -exec mv '{}' "$backup_dir"/ \;

# Check for files in the backup directory
if [ "$(ls -A "$backup_dir")" ]; then
  echo "Creating $hbarchive ..."
  zip -m "archive/$hbarchive" "$backup_dir/*.bak"
  echo "HomeBank backup files for $prevmonth archived."
else
  echo "No backup files for $prevmonth available to be archived."
fi

# Go back to where you started
[ "$curdir" != "$hbdir" ] && popd > /dev/null

exit

